name: CI-release-graalvm-ce-java15-linux-amd64-20.3.0-dev
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache labsjdk download
        id: download
        uses: actions/cache@v2.1.1
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: labsjdk-ce-15-jvmci-20.3-b01
          key: labsjdk-ce-15+36-jvmci-20.3-b01-linux-amd64
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          # restore-keys: # optional
      # Runs a set of commands using the runners shell
      - name: Download labs-jdk-adm64
        if: steps.download.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/graalvm/labs-openjdk-15/releases/download/jvmci-20.3-b01/labsjdk-ce-15+36-jvmci-20.3-b01-linux-amd64.tar.gz
          tar -xf labsjdk-ce-15+36-jvmci-20.3-b01-linux-amd64.tar.gz
      ## Add Cache here with git commit of mx 
      ## Add Cache here with git commit of graal ${{ steps.graal-commit.outputs.commit }}

      ## Clone Graal if needed
      - name: Get last Graal Commit
        id: graal-commit
        run: echo "::set-output name=commit::$(curl --silent https://api.github.com/repos/oracle/graal/commits/master | jq .sha -)" 
      - name: Cache git clone oracle/graal
        id: cache-git-clone-graal
        uses: actions/cache@v2.1.1
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: graal
          key: graal-${{ steps.graal-commit.outputs.commit }}
      - name: Clone Graal if needed
        if: steps.cache-git-clone-graal.outputs.cache-hit != 'true'
        id: git-clone-graal
        run: |
          git clone https://github.com/oracle/graal      
      
      ## Git Clone GraalJS if needed
      - name: Get last GraalJS Commit
        id: graaljs-commit
        run: echo "::set-output name=commit::$(curl --silent https://api.github.com/repos/graalvm/graaljs/commits/master | jq .sha -)" 
      - name: Cache git clone graalvm/graaljs
        id: cache-git-clone-graaljs
        uses: actions/cache@v2.1.1
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: graaljs
          key: graaljs-${{ steps.graaljs-commit.outputs.commit }}
      - name: Clone GraalJS if needed
        if: steps.cache-git-clone-graaljs.outputs.cache-hit != 'true'
        id: git-clone-graaljs
        run: |
          git clone https://github.com/graalvm/graaljs
          
      ## Git Clone MX if needed
      - name: Get last GraalVM MX Commit
        id: mx-commit
        run: echo "::set-output name=commit::$(curl --silent https://api.github.com/repos/graalvm/mx/commits/master | jq .sha -)"
      - name: Cache git clone graalvm/mx
        id: cache-git-clone-mx
        uses: actions/cache@v2.1.1
        with:
          path: mx
          key: mx-${{ steps.mx-commit.outputs.commit }}
      - name: Clone graalvm/mx if needed
        if: steps.cache-git-clone-mx.outputs.cache-hit != 'true'
        id: git-clone-mx
        run: |
          git clone https://github.com/graalvm/mx

      ## Git Clone graalpython if needed
      - name: Get last graalpython Commit
        id: graalpython-commit
        run: echo "::set-output name=commit::$(curl --silent https://api.github.com/repos/graalvm/graalpython/commits/master | jq .sha -)"
      - name: Cache git clone graalvm/graalpython
        id: cache-git-clone-graalpython
        uses: actions/cache@v2.1.1
        with:
          path: graalpython
          key: graalpython-${{ steps.graalpython-commit.outputs.commit }}
      - name: Clone graalvm/graalpython if needed
        if: steps.cache-git-clone-graalpython.outputs.cache-hit != 'true'
        id: git-clone-graalpython
        run: |
          git clone https://github.com/graalvm/graalpython

      ## Git Clone oracle/truffleruby if needed
      - name: Get last https://github.com/oracle/truffleruby Commit
        id: truffleruby-commit
        run: echo "::set-output name=commit::$(curl --silent https://api.github.com/repos/oracle/truffleruby/commits/master | jq .sha -)"
      - name: Cache: git clone https://github.com/oracle/truffleruby
        id: cache-git-clone-truffleruby
        uses: actions/cache@v2.1.1
        with:
          path: truffleruby
          key: truffleruby-${{ steps.truffleruby-commit.outputs.commit }}
      - name: Run: git clone https://github.com/oracle/truffleruby
        if: steps.cache-git-clone-truffleruby.outputs.cache-hit != 'true'
        id: git-clone-truffleruby
        run: |
          git clone https://github.com/oracle/truffleruby
      - name: Cache: mx --env ce build
        id: cache-build-ce
        uses: actions/cache@v2.1.1
        with:
          path: |
            mx/mxbuild
            graaljs/graal-nodejs/mxbuild
            graaljs/graal-js/mxbuild
            graal/sdk/mxbuild
            graal/vm/mxbuild
            graal/compiler/mxbuild
            graal/substratevm/mxbuild
            graal/regex/mxbuild
            graal/tools/mxbuild
            graal/truffle/mxbuild
            graal/sulong/mxbuild
          key: cache-build-ce
      - name: Run: mx --env ce build
        if: steps.cache-build-ce.outputs.cache-hit != 'true'
        id: start-build-ce
        run: |
          export JAVA_HOME=$PWD/labsjdk-ce-15-jvmci-20.3-b01
          export PATH=$JAVA_HOME/bin:$PATH
          echo $JAVA_HOME 
          export PATH=$PWD/mx:$PATH
          cd graal/vm
          mx --env ce sforceimports
          mx --env ce build
      - name: list ce artifacts
        id: build-ce-find-artifacts
        run: |
          find mx/mxbuild > release
          find graaljs/graal-nodejs/mxbuild >> release
          find graaljs/graal-js/mxbuild >> release
          find graal/sdk/mxbuild >> release
          find graal/vm/mxbuild >> release
          find graal/compiler/mxbuild >> release
          find graal/substratevm/mxbuild >> release
          find graal/regex/mxbuild >> release
          find graal/tools/mxbuild >> release
          find graal/truffle/mxbuild >> release
          find graal/sulong/mxbuild >> release
          export WORKING_DIR=$PWD
          cd graal/sdk/mxbuild/linux-amd64/GRAALVM_CE_JAVA15/
          tar cvf - graalvm-ce-java15-20.3.0-dev | gzip -9 - > $WORKING_DIR/graalvm-ce-java15-linux-amd64-20.3.0-dev.tar.gz
          cd $WORKING_DIR
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-file-list
          path: |
            release
      - name: Create graalvm-ce-java15-linux-amd64-20.3.0-dev - ${{ steps.graal-commit.outputs.commit }} Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: vm-20.3.0-dev-jvmci-20.3-b01
          release_name: Release graalvm-ce-java15-linux-amd64-20.3.0-dev - ${{ steps.graal-commit.outputs.commit }}
          draft: true
          prerelease: true
      - name: Upload graalvm-ce-java15-linux-amd64-20.3.0-dev - ${{ steps.graal-commit.outputs.commit }}
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./graalvm-ce-java15-linux-amd64-20.3.0-dev.tar.gz
          asset_name: graalvm-ce-java15-linux-amd64-20.3.0-dev.tar.gz
          asset_content_type: application/gzip
