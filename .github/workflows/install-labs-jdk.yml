# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Cache
        id: download
        uses: actions/cache@v2.1.1
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: labsjdk-ce-15-jvmci-20.3-b01
          key: labsjdk-ce-15+36-jvmci-20.3-b01-linux-amd64
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          # restore-keys: # optional
      # Runs a set of commands using the runners shell
      - name: Download labs-jdk-adm64
        if: steps.download.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/graalvm/labs-openjdk-15/releases/download/jvmci-20.3-b01/labsjdk-ce-15+36-jvmci-20.3-b01-linux-amd64.tar.gz
          tar -xf labsjdk-ce-15+36-jvmci-20.3-b01-linux-amd64.tar.gz
      ## Add Cache here with git commit of mx 
      ## Add Cache here with git commit of graal 
      - name: Run a multi-line script
        run: |
          export JAVA_HOME=$PWD/labsjdk-ce-15-jvmci-20.3-b01
          export PATH=$JAVA_HOME/bin:$PATH
          echo $JAVA_HOME 
          echo $PATH
          git clone https://github.com/oracle/graal
          git clone https://github.com/graalvm/mx
          export PATH=$PWD/mx:$PATH
          cd graal
          git clone https://github.com/graalvm/graaljs
          git rev-parse --short HEAD
          cd vm
          
          
          
          
